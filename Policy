[
  {
    "policy_oid": 23234,
    "policy_schema": "public",
    "table_name": "admin_users",
    "policy_name": "admin_users_simple",
    "policy_for": "*",
    "table_owner": "postgres",
    "policy_to_roles": "{0}",
    "using_expression": "((auth.jwt() ->> 'email'::text) IS NOT NULL)",
    "with_check_expression": "((auth.jwt() ->> 'email'::text) IS NOT NULL)",
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22881,
    "policy_schema": "public",
    "table_name": "categories",
    "policy_name": "cat_select",
    "policy_for": "S",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member(tenant_id))",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22882,
    "policy_schema": "public",
    "table_name": "categories",
    "policy_name": "cat_write",
    "policy_for": "*",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "with_check_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 17855,
    "policy_schema": "public",
    "table_name": "menu_discounts",
    "policy_name": "Authenticated users can manage discounts",
    "policy_for": "*",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "true",
    "with_check_expression": "true",
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 17856,
    "policy_schema": "public",
    "table_name": "menu_discounts",
    "policy_name": "Public can view active discounts",
    "policy_for": "S",
    "table_owner": "postgres",
    "policy_to_roles": "{0}",
    "using_expression": "(is_active = true)",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22883,
    "policy_schema": "public",
    "table_name": "menu_discounts",
    "policy_name": "md_select",
    "policy_for": "S",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member(tenant_id))",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22884,
    "policy_schema": "public",
    "table_name": "menu_discounts",
    "policy_name": "md_write",
    "policy_for": "*",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "with_check_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22888,
    "policy_schema": "public",
    "table_name": "menu_items",
    "policy_name": "mi_delete",
    "policy_for": "D",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22886,
    "policy_schema": "public",
    "table_name": "menu_items",
    "policy_name": "mi_insert",
    "policy_for": "I",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": null,
    "with_check_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22885,
    "policy_schema": "public",
    "table_name": "menu_items",
    "policy_name": "mi_select",
    "policy_for": "S",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member(tenant_id))",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22887,
    "policy_schema": "public",
    "table_name": "menu_items",
    "policy_name": "mi_update",
    "policy_for": "U",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member(tenant_id))",
    "with_check_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 17859,
    "policy_schema": "public",
    "table_name": "menu_option_items",
    "policy_name": "Authenticated users can manage option items",
    "policy_for": "*",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "true",
    "with_check_expression": "true",
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 17860,
    "policy_schema": "public",
    "table_name": "menu_option_items",
    "policy_name": "Public can view option items",
    "policy_for": "S",
    "table_owner": "postgres",
    "policy_to_roles": "{0}",
    "using_expression": "true",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22891,
    "policy_schema": "public",
    "table_name": "menu_option_items",
    "policy_name": "moi_select",
    "policy_for": "S",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member(tenant_id))",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22892,
    "policy_schema": "public",
    "table_name": "menu_option_items",
    "policy_name": "moi_write",
    "policy_for": "*",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "with_check_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 17857,
    "policy_schema": "public",
    "table_name": "menu_options",
    "policy_name": "Authenticated users can manage menu options",
    "policy_for": "*",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "true",
    "with_check_expression": "true",
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 17858,
    "policy_schema": "public",
    "table_name": "menu_options",
    "policy_name": "Public can view menu options",
    "policy_for": "S",
    "table_owner": "postgres",
    "policy_to_roles": "{0}",
    "using_expression": "true",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22889,
    "policy_schema": "public",
    "table_name": "menu_options",
    "policy_name": "mo_select",
    "policy_for": "S",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member(tenant_id))",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22890,
    "policy_schema": "public",
    "table_name": "menu_options",
    "policy_name": "mo_write",
    "policy_for": "*",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "with_check_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22897,
    "policy_schema": "public",
    "table_name": "order_items",
    "policy_name": "oi_select",
    "policy_for": "S",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member(tenant_id))",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22898,
    "policy_schema": "public",
    "table_name": "order_items",
    "policy_name": "oi_write",
    "policy_for": "*",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "with_check_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22895,
    "policy_schema": "public",
    "table_name": "orders",
    "policy_name": "ord_select",
    "policy_for": "S",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member(tenant_id))",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22896,
    "policy_schema": "public",
    "table_name": "orders",
    "policy_name": "ord_write",
    "policy_for": "*",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "with_check_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22893,
    "policy_schema": "public",
    "table_name": "payment_methods",
    "policy_name": "pm_select",
    "policy_for": "S",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member(tenant_id))",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22894,
    "policy_schema": "public",
    "table_name": "payment_methods",
    "policy_name": "pm_write",
    "policy_for": "*",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "with_check_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22899,
    "policy_schema": "public",
    "table_name": "payment_proofs",
    "policy_name": "pp_select",
    "policy_for": "S",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member(tenant_id))",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22900,
    "policy_schema": "public",
    "table_name": "payment_proofs",
    "policy_name": "pp_write",
    "policy_for": "*",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "with_check_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22902,
    "policy_schema": "public",
    "table_name": "tenant_activity_logs",
    "policy_name": "log_insert",
    "policy_for": "I",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": null,
    "with_check_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22901,
    "policy_schema": "public",
    "table_name": "tenant_activity_logs",
    "policy_name": "log_select",
    "policy_for": "S",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member(tenant_id))",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 25804,
    "policy_schema": "public",
    "table_name": "tenant_settings",
    "policy_name": "ts_select",
    "policy_for": "S",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member(tenant_id))",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 25805,
    "policy_schema": "public",
    "table_name": "tenant_settings",
    "policy_name": "ts_write",
    "policy_for": "*",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "with_check_expression": "(is_platform_admin() OR is_tenant_member_strict(tenant_id))",
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 20087,
    "policy_schema": "public",
    "table_name": "tenant_users",
    "policy_name": "Super admin tenant_users access",
    "policy_for": "*",
    "table_owner": "postgres",
    "policy_to_roles": "{0}",
    "using_expression": "(((current_setting('request.jwt.claims'::text, true))::json ->> 'email'::text) IN ( SELECT admin_users.email\n   FROM admin_users\n  WHERE ((admin_users.role = 'super_admin'::text) AND (admin_users.is_active = true))))",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 23430,
    "policy_schema": "public",
    "table_name": "tenant_users",
    "policy_name": "tenant_users_fixed",
    "policy_for": "*",
    "table_owner": "postgres",
    "policy_to_roles": "{0}",
    "using_expression": "((auth.jwt() ->> 'email'::text) IS NOT NULL)",
    "with_check_expression": "((auth.jwt() ->> 'email'::text) IS NOT NULL)",
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 20167,
    "policy_schema": "public",
    "table_name": "tenant_users",
    "policy_name": "tenant_users_self_view",
    "policy_for": "S",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "((user_email)::text = (auth.jwt() ->> 'email'::text))",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 20165,
    "policy_schema": "public",
    "table_name": "tenant_users",
    "policy_name": "tenant_users_super_admin_manage",
    "policy_for": "*",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(EXISTS ( SELECT 1\n   FROM admin_users au\n  WHERE ((au.email = (auth.jwt() ->> 'email'::text)) AND (au.role = 'super_admin'::text) AND (au.is_active = true))))",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 20166,
    "policy_schema": "public",
    "table_name": "tenant_users",
    "policy_name": "tenant_users_tenant_admin_manage",
    "policy_for": "*",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "((tenant_id IS NOT NULL) AND ((user_email)::text = (auth.jwt() ->> 'email'::text)) AND ((role)::text = ANY ((ARRAY['admin'::character varying, 'super_admin'::character varying])::text[])) AND (is_active = true))",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 22878,
    "policy_schema": "public",
    "table_name": "tenants",
    "policy_name": "t_select",
    "policy_for": "S",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(is_platform_admin() OR is_tenant_member(id))",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 23053,
    "policy_schema": "public",
    "table_name": "tenants",
    "policy_name": "tenants_select",
    "policy_for": "S",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "((is_active = true) OR is_super_admin() OR (EXISTS ( SELECT 1\n   FROM tenant_users tu\n  WHERE ((tu.tenant_id = tenants.id) AND (tu.user_id = auth.uid()) AND (tu.is_active = true)))))",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 20168,
    "policy_schema": "public",
    "table_name": "tenants",
    "policy_name": "tenants_super_admin_manage",
    "policy_for": "*",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(EXISTS ( SELECT 1\n   FROM admin_users au\n  WHERE ((au.email = (auth.jwt() ->> 'email'::text)) AND (au.role = 'super_admin'::text) AND (au.is_active = true))))",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 20169,
    "policy_schema": "public",
    "table_name": "tenants",
    "policy_name": "tenants_user_view_own",
    "policy_for": "S",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(EXISTS ( SELECT 1\n   FROM tenant_users tu\n  WHERE ((tu.tenant_id = tenants.id) AND ((tu.user_email)::text = (auth.jwt() ->> 'email'::text)) AND (tu.is_active = true))))",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 23054,
    "policy_schema": "public",
    "table_name": "tenants",
    "policy_name": "tenants_write",
    "policy_for": "*",
    "table_owner": "postgres",
    "policy_to_roles": "{authenticated}",
    "using_expression": "is_super_admin()",
    "with_check_expression": "is_super_admin()",
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 17638,
    "policy_schema": "storage",
    "table_name": "objects",
    "policy_name": "Allow all operations for authenticated users",
    "policy_for": "*",
    "table_owner": "supabase_storage_admin",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(bucket_id = 'store-icons'::text)",
    "with_check_expression": "(bucket_id = 'store-icons'::text)",
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 17710,
    "policy_schema": "storage",
    "table_name": "objects",
    "policy_name": "Allow authenticated users all operations",
    "policy_for": "*",
    "table_owner": "supabase_storage_admin",
    "policy_to_roles": "{authenticated}",
    "using_expression": "(bucket_id = 'store-icons'::text)",
    "with_check_expression": "(bucket_id = 'store-icons'::text)",
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 17639,
    "policy_schema": "storage",
    "table_name": "objects",
    "policy_name": "Allow public read access",
    "policy_for": "S",
    "table_owner": "supabase_storage_admin",
    "policy_to_roles": "{0}",
    "using_expression": "(bucket_id = 'store-icons'::text)",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 17756,
    "policy_schema": "storage",
    "table_name": "objects",
    "policy_name": "Authenticated users can upload menu photos",
    "policy_for": "I",
    "table_owner": "supabase_storage_admin",
    "policy_to_roles": "{authenticated}",
    "using_expression": null,
    "with_check_expression": "(bucket_id = 'menu-photos'::text)",
    "is_permissive": true,
    "relation_kind": "r"
  },
  {
    "policy_oid": 17757,
    "policy_schema": "storage",
    "table_name": "objects",
    "policy_name": "Public read access for menu photos",
    "policy_for": "S",
    "table_owner": "supabase_storage_admin",
    "policy_to_roles": "{0}",
    "using_expression": "(bucket_id = 'menu-photos'::text)",
    "with_check_expression": null,
    "is_permissive": true,
    "relation_kind": "r"
  }
]